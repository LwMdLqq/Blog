---
layout: post
title:  "vuex第一天"
date:   2019-02-20 10:58:13 +0800
categories: jekyll update
---

#### vuex是什么？

vuex是一个专为Vue.js应用程序开发的状态管理模式，它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。

```
new Vue({
    // state
    data () {
        return {
            count: 0
        }
    },
    // view
    template:
        `<div>{{count}}</div>`,
    // actions
    methods: {
        add () {
            this.count++
        }
    }
})
```


状态管理模式主要分为三个部分：
    state：驱动应用的数据源
    view：以声明方式将state映射到视图
    actions：响应在view上的用户输入导致的状态变化


当我们的组件遇到多个组件共享状态时，但数据流的简洁性很容易破坏
1. 多个视图依赖于同一状态
2. 来自不同视图的行为需要变更同一状态



最好的解决办法是：把组件的共享状态抽取出来，以一个全局单例模式管理


#### 什么情况下使用vuex?

如果不打算开发大型单页应用，使用Vuex就会比较繁琐冗余，所以，如果组件应用够简单，最好不要使用；
如果需要构建一个中大型单页应用，就需要考虑vuex


#### 开始vuex

每一个vuex应用的核心就是store(仓库)。store基本上就是一个容器，它包含着你的应用中大部分的状态。


vuex和单纯的全局对象有以下两点不同：
1. vuex的状态存储是响应式的。当vue组件从store中读取状态的时候，若store中的状态发生变化，那么相应的组件也会相应的得到高效更新
2. 你不能直接改变store中的状态，改变store中的状态的唯一途径就是显式地